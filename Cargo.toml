[workspace]
members = [
    ".",                           # main clvm-zk crate
    "clvm_zk_core",                # core clvm evaluation engine and shared types
    # backend implementations
    "backends/risc0",              # risc0 backend implementation
    "backends/risc0/guest",        # risc0 guest program
    "backends/sp1",                # sp1 backend implementation
    "backends/sp1/program",        # sp1 guest
    "backends/mock"                # mock backend for testing
]

[package]
name = "clvm-zk"
version = "0.1.0"
edition = "2021"

[lib]
name = "clvm_zk"
path = "src/lib.rs"

[[bin]]
name = "clvm-zk"
path = "src/main.rs"

[features]
default = ["sp1", "testing"]

# zkvm backend selection (exactly one should be enabled, mutually exclusive)
# when switching backends, use: cargo <cmd> --no-default-features --features <backend>,testing
risc0 = ["dep:clvm-zk-risc0", "clvm-zk-core/risc0"]  # risc0 zkvm backend with precompiles
sp1 = ["dep:clvm-zk-sp1", "clvm-zk-core/sp1"]        # sp1 zkvm backend (default, faster proving)
mock = ["dep:clvm-zk-mock", "clvm-zk-core/sha2-hasher"]  # mock backend for testing

# testing utilities (enabled by default for tests)
testing = ["clvm-zk-core/sha2-hasher"]

[dependencies]
# Core dependencies
serde = { version = "1.0.219", features = ["derive"] }
serde_json = "1.0"
clvm-zk-core = { path = "clvm_zk_core" }
clap = { version = "4.5.43", features = ["derive"] }
thiserror = "2.0.12"
sha2 = "0.10"
hex = "0.4"
rand = "0.8"
bip32 = "0.5"
hmac = "0.12"
k256 = { version = "0.13", features = ["ecdsa", "sha256"] }  # For ECDSA signature verification
rs_merkle = "1.5"  # For merkle tree proof generation on host
x25519-dalek = { version = "2.0", features = ["static_secrets"] }  # For ECDH key exchange in encrypted notes
chacha20poly1305 = "0.10"  # For authenticated encryption of payment notes

# Backend implementations
clvm-zk-risc0 = { path = "backends/risc0", optional = true }
clvm-zk-sp1 = { path = "backends/sp1", optional = true }
clvm-zk-mock = { path = "backends/mock", optional = true }


[dev-dependencies]
tokio = { version = "1.47", features = ["full"] }
serde_json = "1.0"
k256 = { version = "0.13", features = ["ecdsa", "sha256"] }  # For ECDSA examples
rand = "0.8"  # For key generation in examples (compatible with k256)
once_cell = "1.18"
chrono = { version = "0.4", default-features = false, features = ["clock", "std"] }
blst = "0.3"  # For BLS test vector generation


# Development profile with guest compatibility
[profile.dev]
panic = "abort"  # Required for guest programs

# Test configuration for long-running ZK proof tests
[profile.test]
# Enable optimizations for tests to improve ZK proof performance
opt-level = 2
lto = "thin"
codegen-units = 1

[profile.release]
# Optimize for performance in release builds
opt-level = 3
lto = "thin"
codegen-units = 1
panic = "abort"

# Profile for guest program optimization
[profile.guest]
inherits = "release"
opt-level = "z"  # Optimize for size in guest program
lto = true
codegen-units = 1
panic = "abort"


